//include the header
#include "fragmentation_JEC.h"

// Initialize the corrections
 
 fragmentation_JEC *FF_JEC=new fragmentation_JEC(radius, do_PbPb, do_pp_tracking,do_residual_correction,nstep_residual); //3rd variable is only for when do_PbPb is false
 FF_JEC->set_effcorrection();
 FF_JEC->set_correction();

// For each event
// Calculate efficiency

	double eff = 1;
	
	if(do_effcorrection && do_PbPb){
	 eff=FF_JEC->get_efficiency(fjet->jtpt[ijet],fjet->jteta[ijet],cent);
	}
	
// Calculate the number of PF candidates

    double npf=0;
    for(int ipf=0;ipf<fpf->nPFpart;ipf++){
     if(doPP){
      if(FF_JEC->passes_PF_selection(fpf->pfPt[ipf], fpf->pfEta[ipf], fpf->pfPhi[ipf], fpf->pfId[ipf], fjet->jteta[ijet], fjet->jtphi[ijet])) npf++;
      }else{
      if(FF_JEC->passes_PF_selection(fpf->pfVsPt[ipf], fpf->pfEta[ipf], fpf->pfPhi[ipf], fpf->pfId[ipf], fjet->jteta[ijet], fjet->jtphi[ijet])) npf++;
     }
    }
	npf/=eff;

//Then get the corrected pt for each jet before dijet selection

   if(do_PbPb) double corrected_pt=FF_JEC->get_corrected_pt(fjet->jtpt[ijet], npf, hiBin);
   else double corrected_pt=FF_JEC->get_corrected_pt(fjet->jtpt[ijet], npf);
   
   if(do_residual_correction) residual_corrected_pt=FF_JEC->get_residual_corrected_pt(corrected_pt,cent);
